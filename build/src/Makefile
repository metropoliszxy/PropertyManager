# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.5

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/zhao/projects/PropertyManager

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/zhao/projects/PropertyManager/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool for source..."
	cd /home/zhao/projects/PropertyManager/build && /usr/bin/cpack --config ./CPackSourceConfig.cmake /home/zhao/projects/PropertyManager/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source

.PHONY : package_source/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool..."
	cd /home/zhao/projects/PropertyManager/build && /usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package

.PHONY : package/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip

.PHONY : install/strip/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local

.PHONY : install/local/fast

# The main all target
all: cmake_check_build_system
	cd /home/zhao/projects/PropertyManager/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/zhao/projects/PropertyManager/build/CMakeFiles /home/zhao/projects/PropertyManager/build/src/CMakeFiles/progress.marks
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f CMakeFiles/Makefile2 src/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/zhao/projects/PropertyManager/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f CMakeFiles/Makefile2 src/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f CMakeFiles/Makefile2 src/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/zhao/projects/PropertyManager/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
src/CMakeFiles/libJSBSim.dir/rule:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/libJSBSim.dir/rule
.PHONY : src/CMakeFiles/libJSBSim.dir/rule

# Convenience name for target.
libJSBSim: src/CMakeFiles/libJSBSim.dir/rule

.PHONY : libJSBSim

# fast build rule for target.
libJSBSim/fast:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/build
.PHONY : libJSBSim/fast

# Convenience name for target.
src/CMakeFiles/../PropertyManager.dir/rule:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f CMakeFiles/Makefile2 src/CMakeFiles/../PropertyManager.dir/rule
.PHONY : src/CMakeFiles/../PropertyManager.dir/rule

# Convenience name for target.
../PropertyManager: src/CMakeFiles/../PropertyManager.dir/rule

.PHONY : ../PropertyManager

# fast build rule for target.
../PropertyManager/fast:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/../PropertyManager.dir/build.make src/CMakeFiles/../PropertyManager.dir/build
.PHONY : ../PropertyManager/fast

FGLYRABase.o: FGLYRABase.cpp.o

.PHONY : FGLYRABase.o

# target to build an object file
FGLYRABase.cpp.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/FGLYRABase.cpp.o
.PHONY : FGLYRABase.cpp.o

FGLYRABase.i: FGLYRABase.cpp.i

.PHONY : FGLYRABase.i

# target to preprocess a source file
FGLYRABase.cpp.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/FGLYRABase.cpp.i
.PHONY : FGLYRABase.cpp.i

FGLYRABase.s: FGLYRABase.cpp.s

.PHONY : FGLYRABase.s

# target to generate assembly for a file
FGLYRABase.cpp.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/FGLYRABase.cpp.s
.PHONY : FGLYRABase.cpp.s

PropertyManager.o: PropertyManager.cpp.o

.PHONY : PropertyManager.o

# target to build an object file
PropertyManager.cpp.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/../PropertyManager.dir/build.make src/CMakeFiles/../PropertyManager.dir/PropertyManager.cpp.o
.PHONY : PropertyManager.cpp.o

PropertyManager.i: PropertyManager.cpp.i

.PHONY : PropertyManager.i

# target to preprocess a source file
PropertyManager.cpp.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/../PropertyManager.dir/build.make src/CMakeFiles/../PropertyManager.dir/PropertyManager.cpp.i
.PHONY : PropertyManager.cpp.i

PropertyManager.s: PropertyManager.cpp.s

.PHONY : PropertyManager.s

# target to generate assembly for a file
PropertyManager.cpp.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/../PropertyManager.dir/build.make src/CMakeFiles/../PropertyManager.dir/PropertyManager.cpp.s
.PHONY : PropertyManager.cpp.s

input_output/FGPropertyManager.o: input_output/FGPropertyManager.cpp.o

.PHONY : input_output/FGPropertyManager.o

# target to build an object file
input_output/FGPropertyManager.cpp.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGPropertyManager.cpp.o
.PHONY : input_output/FGPropertyManager.cpp.o

input_output/FGPropertyManager.i: input_output/FGPropertyManager.cpp.i

.PHONY : input_output/FGPropertyManager.i

# target to preprocess a source file
input_output/FGPropertyManager.cpp.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGPropertyManager.cpp.i
.PHONY : input_output/FGPropertyManager.cpp.i

input_output/FGPropertyManager.s: input_output/FGPropertyManager.cpp.s

.PHONY : input_output/FGPropertyManager.s

# target to generate assembly for a file
input_output/FGPropertyManager.cpp.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGPropertyManager.cpp.s
.PHONY : input_output/FGPropertyManager.cpp.s

input_output/FGPropertyReader.o: input_output/FGPropertyReader.cpp.o

.PHONY : input_output/FGPropertyReader.o

# target to build an object file
input_output/FGPropertyReader.cpp.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGPropertyReader.cpp.o
.PHONY : input_output/FGPropertyReader.cpp.o

input_output/FGPropertyReader.i: input_output/FGPropertyReader.cpp.i

.PHONY : input_output/FGPropertyReader.i

# target to preprocess a source file
input_output/FGPropertyReader.cpp.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGPropertyReader.cpp.i
.PHONY : input_output/FGPropertyReader.cpp.i

input_output/FGPropertyReader.s: input_output/FGPropertyReader.cpp.s

.PHONY : input_output/FGPropertyReader.s

# target to generate assembly for a file
input_output/FGPropertyReader.cpp.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGPropertyReader.cpp.s
.PHONY : input_output/FGPropertyReader.cpp.s

input_output/FGXMLElement.o: input_output/FGXMLElement.cpp.o

.PHONY : input_output/FGXMLElement.o

# target to build an object file
input_output/FGXMLElement.cpp.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGXMLElement.cpp.o
.PHONY : input_output/FGXMLElement.cpp.o

input_output/FGXMLElement.i: input_output/FGXMLElement.cpp.i

.PHONY : input_output/FGXMLElement.i

# target to preprocess a source file
input_output/FGXMLElement.cpp.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGXMLElement.cpp.i
.PHONY : input_output/FGXMLElement.cpp.i

input_output/FGXMLElement.s: input_output/FGXMLElement.cpp.s

.PHONY : input_output/FGXMLElement.s

# target to generate assembly for a file
input_output/FGXMLElement.cpp.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/input_output/FGXMLElement.cpp.s
.PHONY : input_output/FGXMLElement.cpp.s

simgear/props/propertyObject.o: simgear/props/propertyObject.cxx.o

.PHONY : simgear/props/propertyObject.o

# target to build an object file
simgear/props/propertyObject.cxx.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/props/propertyObject.cxx.o
.PHONY : simgear/props/propertyObject.cxx.o

simgear/props/propertyObject.i: simgear/props/propertyObject.cxx.i

.PHONY : simgear/props/propertyObject.i

# target to preprocess a source file
simgear/props/propertyObject.cxx.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/props/propertyObject.cxx.i
.PHONY : simgear/props/propertyObject.cxx.i

simgear/props/propertyObject.s: simgear/props/propertyObject.cxx.s

.PHONY : simgear/props/propertyObject.s

# target to generate assembly for a file
simgear/props/propertyObject.cxx.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/props/propertyObject.cxx.s
.PHONY : simgear/props/propertyObject.cxx.s

simgear/props/props.o: simgear/props/props.cxx.o

.PHONY : simgear/props/props.o

# target to build an object file
simgear/props/props.cxx.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/props/props.cxx.o
.PHONY : simgear/props/props.cxx.o

simgear/props/props.i: simgear/props/props.cxx.i

.PHONY : simgear/props/props.i

# target to preprocess a source file
simgear/props/props.cxx.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/props/props.cxx.i
.PHONY : simgear/props/props.cxx.i

simgear/props/props.s: simgear/props/props.cxx.s

.PHONY : simgear/props/props.s

# target to generate assembly for a file
simgear/props/props.cxx.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/props/props.cxx.s
.PHONY : simgear/props/props.cxx.s

simgear/xml/easyxml.o: simgear/xml/easyxml.cxx.o

.PHONY : simgear/xml/easyxml.o

# target to build an object file
simgear/xml/easyxml.cxx.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/easyxml.cxx.o
.PHONY : simgear/xml/easyxml.cxx.o

simgear/xml/easyxml.i: simgear/xml/easyxml.cxx.i

.PHONY : simgear/xml/easyxml.i

# target to preprocess a source file
simgear/xml/easyxml.cxx.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/easyxml.cxx.i
.PHONY : simgear/xml/easyxml.cxx.i

simgear/xml/easyxml.s: simgear/xml/easyxml.cxx.s

.PHONY : simgear/xml/easyxml.s

# target to generate assembly for a file
simgear/xml/easyxml.cxx.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/easyxml.cxx.s
.PHONY : simgear/xml/easyxml.cxx.s

simgear/xml/xmlparse.o: simgear/xml/xmlparse.c.o

.PHONY : simgear/xml/xmlparse.o

# target to build an object file
simgear/xml/xmlparse.c.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmlparse.c.o
.PHONY : simgear/xml/xmlparse.c.o

simgear/xml/xmlparse.i: simgear/xml/xmlparse.c.i

.PHONY : simgear/xml/xmlparse.i

# target to preprocess a source file
simgear/xml/xmlparse.c.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmlparse.c.i
.PHONY : simgear/xml/xmlparse.c.i

simgear/xml/xmlparse.s: simgear/xml/xmlparse.c.s

.PHONY : simgear/xml/xmlparse.s

# target to generate assembly for a file
simgear/xml/xmlparse.c.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmlparse.c.s
.PHONY : simgear/xml/xmlparse.c.s

simgear/xml/xmlrole.o: simgear/xml/xmlrole.c.o

.PHONY : simgear/xml/xmlrole.o

# target to build an object file
simgear/xml/xmlrole.c.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmlrole.c.o
.PHONY : simgear/xml/xmlrole.c.o

simgear/xml/xmlrole.i: simgear/xml/xmlrole.c.i

.PHONY : simgear/xml/xmlrole.i

# target to preprocess a source file
simgear/xml/xmlrole.c.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmlrole.c.i
.PHONY : simgear/xml/xmlrole.c.i

simgear/xml/xmlrole.s: simgear/xml/xmlrole.c.s

.PHONY : simgear/xml/xmlrole.s

# target to generate assembly for a file
simgear/xml/xmlrole.c.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmlrole.c.s
.PHONY : simgear/xml/xmlrole.c.s

simgear/xml/xmltok.o: simgear/xml/xmltok.c.o

.PHONY : simgear/xml/xmltok.o

# target to build an object file
simgear/xml/xmltok.c.o:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmltok.c.o
.PHONY : simgear/xml/xmltok.c.o

simgear/xml/xmltok.i: simgear/xml/xmltok.c.i

.PHONY : simgear/xml/xmltok.i

# target to preprocess a source file
simgear/xml/xmltok.c.i:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmltok.c.i
.PHONY : simgear/xml/xmltok.c.i

simgear/xml/xmltok.s: simgear/xml/xmltok.c.s

.PHONY : simgear/xml/xmltok.s

# target to generate assembly for a file
simgear/xml/xmltok.c.s:
	cd /home/zhao/projects/PropertyManager/build && $(MAKE) -f src/CMakeFiles/libJSBSim.dir/build.make src/CMakeFiles/libJSBSim.dir/simgear/xml/xmltok.c.s
.PHONY : simgear/xml/xmltok.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... package"
	@echo "... list_install_components"
	@echo "... install"
	@echo "... libJSBSim"
	@echo "... ../PropertyManager"
	@echo "... install/strip"
	@echo "... install/local"
	@echo "... FGLYRABase.o"
	@echo "... FGLYRABase.i"
	@echo "... FGLYRABase.s"
	@echo "... PropertyManager.o"
	@echo "... PropertyManager.i"
	@echo "... PropertyManager.s"
	@echo "... input_output/FGPropertyManager.o"
	@echo "... input_output/FGPropertyManager.i"
	@echo "... input_output/FGPropertyManager.s"
	@echo "... input_output/FGPropertyReader.o"
	@echo "... input_output/FGPropertyReader.i"
	@echo "... input_output/FGPropertyReader.s"
	@echo "... input_output/FGXMLElement.o"
	@echo "... input_output/FGXMLElement.i"
	@echo "... input_output/FGXMLElement.s"
	@echo "... simgear/props/propertyObject.o"
	@echo "... simgear/props/propertyObject.i"
	@echo "... simgear/props/propertyObject.s"
	@echo "... simgear/props/props.o"
	@echo "... simgear/props/props.i"
	@echo "... simgear/props/props.s"
	@echo "... simgear/xml/easyxml.o"
	@echo "... simgear/xml/easyxml.i"
	@echo "... simgear/xml/easyxml.s"
	@echo "... simgear/xml/xmlparse.o"
	@echo "... simgear/xml/xmlparse.i"
	@echo "... simgear/xml/xmlparse.s"
	@echo "... simgear/xml/xmlrole.o"
	@echo "... simgear/xml/xmlrole.i"
	@echo "... simgear/xml/xmlrole.s"
	@echo "... simgear/xml/xmltok.o"
	@echo "... simgear/xml/xmltok.i"
	@echo "... simgear/xml/xmltok.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/zhao/projects/PropertyManager/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

